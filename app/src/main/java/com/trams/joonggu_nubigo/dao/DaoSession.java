package com.trams.joonggu_nubigo.dao;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import com.trams.joonggu_nubigo.dao.Accessibility;
import com.trams.joonggu_nubigo.dao.Category;
import com.trams.joonggu_nubigo.dao.Facility;
import com.trams.joonggu_nubigo.dao.Field;
import com.trams.joonggu_nubigo.dao.Notice;
import com.trams.joonggu_nubigo.dao.Store;
import com.trams.joonggu_nubigo.dao.User;
import com.trams.joonggu_nubigo.dao.Version;

import com.trams.joonggu_nubigo.dao.AccessibilityDao;
import com.trams.joonggu_nubigo.dao.CategoryDao;
import com.trams.joonggu_nubigo.dao.FacilityDao;
import com.trams.joonggu_nubigo.dao.FieldDao;
import com.trams.joonggu_nubigo.dao.NoticeDao;
import com.trams.joonggu_nubigo.dao.StoreDao;
import com.trams.joonggu_nubigo.dao.UserDao;
import com.trams.joonggu_nubigo.dao.VersionDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig accessibilityDaoConfig;
    private final DaoConfig categoryDaoConfig;
    private final DaoConfig facilityDaoConfig;
    private final DaoConfig fieldDaoConfig;
    private final DaoConfig noticeDaoConfig;
    private final DaoConfig storeDaoConfig;
    private final DaoConfig userDaoConfig;
    private final DaoConfig versionDaoConfig;

    private final AccessibilityDao accessibilityDao;
    private final CategoryDao categoryDao;
    private final FacilityDao facilityDao;
    private final FieldDao fieldDao;
    private final NoticeDao noticeDao;
    private final StoreDao storeDao;
    private final UserDao userDao;
    private final VersionDao versionDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        accessibilityDaoConfig = daoConfigMap.get(AccessibilityDao.class).clone();
        accessibilityDaoConfig.initIdentityScope(type);

        categoryDaoConfig = daoConfigMap.get(CategoryDao.class).clone();
        categoryDaoConfig.initIdentityScope(type);

        facilityDaoConfig = daoConfigMap.get(FacilityDao.class).clone();
        facilityDaoConfig.initIdentityScope(type);

        fieldDaoConfig = daoConfigMap.get(FieldDao.class).clone();
        fieldDaoConfig.initIdentityScope(type);

        noticeDaoConfig = daoConfigMap.get(NoticeDao.class).clone();
        noticeDaoConfig.initIdentityScope(type);

        storeDaoConfig = daoConfigMap.get(StoreDao.class).clone();
        storeDaoConfig.initIdentityScope(type);

        userDaoConfig = daoConfigMap.get(UserDao.class).clone();
        userDaoConfig.initIdentityScope(type);

        versionDaoConfig = daoConfigMap.get(VersionDao.class).clone();
        versionDaoConfig.initIdentityScope(type);

        accessibilityDao = new AccessibilityDao(accessibilityDaoConfig, this);
        categoryDao = new CategoryDao(categoryDaoConfig, this);
        facilityDao = new FacilityDao(facilityDaoConfig, this);
        fieldDao = new FieldDao(fieldDaoConfig, this);
        noticeDao = new NoticeDao(noticeDaoConfig, this);
        storeDao = new StoreDao(storeDaoConfig, this);
        userDao = new UserDao(userDaoConfig, this);
        versionDao = new VersionDao(versionDaoConfig, this);

        registerDao(Accessibility.class, accessibilityDao);
        registerDao(Category.class, categoryDao);
        registerDao(Facility.class, facilityDao);
        registerDao(Field.class, fieldDao);
        registerDao(Notice.class, noticeDao);
        registerDao(Store.class, storeDao);
        registerDao(User.class, userDao);
        registerDao(Version.class, versionDao);
    }
    
    public void clear() {
        accessibilityDaoConfig.getIdentityScope().clear();
        categoryDaoConfig.getIdentityScope().clear();
        facilityDaoConfig.getIdentityScope().clear();
        fieldDaoConfig.getIdentityScope().clear();
        noticeDaoConfig.getIdentityScope().clear();
        storeDaoConfig.getIdentityScope().clear();
        userDaoConfig.getIdentityScope().clear();
        versionDaoConfig.getIdentityScope().clear();
    }

    public AccessibilityDao getAccessibilityDao() {
        return accessibilityDao;
    }

    public CategoryDao getCategoryDao() {
        return categoryDao;
    }

    public FacilityDao getFacilityDao() {
        return facilityDao;
    }

    public FieldDao getFieldDao() {
        return fieldDao;
    }

    public NoticeDao getNoticeDao() {
        return noticeDao;
    }

    public StoreDao getStoreDao() {
        return storeDao;
    }

    public UserDao getUserDao() {
        return userDao;
    }

    public VersionDao getVersionDao() {
        return versionDao;
    }

}
